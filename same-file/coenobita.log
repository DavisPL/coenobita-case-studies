[DEBUG] Coenobita invoked for crate 'same_file'
=========
[DEBUG] Crate type is lib
[DEBUG] Trying to get func ty of defid DefId(0:67 ~ same_file[e416]::unix::{impl#7}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11202 ~ core[7d5a]::fmt::{impl#9}::debug_struct_field4_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:23 ~ same_file[e416]::unix::{impl#0}::drop)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking `if` influenced by Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:4922 ~ std[e3cd]::os::fd::raw::IntoRawFd::into_raw_fd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).6), kind: Tup([Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).7), kind: Field(Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).8), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:10: 32:14 (#0), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).9), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:10: 32:14 (#0) }, dev#0), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:10: 32:18 (#0) }, Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).10), kind: Field(Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).11), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:20: 32:24 (#0), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).12), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:20: 32:24 (#0) }, ino#0), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:20: 32:28 (#0) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:9: 32:29 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).13), kind: Tup([Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).14), kind: Field(Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:34: 32:39 (#0), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).4)), segments: [PathSegment { ident: other#0, hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).16), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:34: 32:39 (#0) }, dev#0), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:34: 32:43 (#0) }, Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).17), kind: Field(Expr { hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).18), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:45: 32:50 (#0), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).4)), segments: [PathSegment { ident: other#0, hir_id: HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).19), res: Local(HirId(DefId(0:26 ~ same_file[e416]::unix::{impl#2}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:45: 32:50 (#0) }, ino#0), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:45: 32:54 (#0) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/unix.rs:32:33: 32:55 (#0) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:28 ~ same_file[e416]::unix::{impl#3}::as_raw_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:4918 ~ std[e3cd]::os::fd::raw::AsRawFd::as_raw_fd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9662 ~ core[7d5a]::option::{impl#0}::as_ref)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:30 ~ same_file[e416]::unix::{impl#4}::into_raw_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:4922 ~ std[e3cd]::os::fd::raw::IntoRawFd::into_raw_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:32 ~ same_file[e416]::unix::{impl#5}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:35 ~ same_file[e416]::unix::{impl#6}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:37 ~ same_file[e416]::unix::{impl#6}::from_file)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:141 ~ cstd[6a4e]::fs::{impl#12}::open)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:135 ~ cstd[6a4e]::fs::{impl#12}::read)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(1:134 ~ cstd[6a4e]::fs::{impl#12}::new)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:37 ~ same_file[e416]::unix::{impl#6}::from_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(1:93 ~ cstd[6a4e]::fs::{impl#1}::metadata)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(2:4306 ~ std[e3cd]::os::unix::fs::MetadataExt::dev)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(2:4307 ~ std[e3cd]::os::unix::fs::MetadataExt::ino)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:38 ~ same_file[e416]::unix::{impl#6}::from_std)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:37 ~ same_file[e416]::unix::{impl#6}::from_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ same_file[e416]::unix::{impl#6}::stdin)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:38 ~ same_file[e416]::unix::{impl#6}::from_std)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:4920 ~ std[e3cd]::os::fd::raw::FromRawFd::from_raw_fd)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:41 ~ same_file[e416]::unix::{impl#6}::stdout)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:38 ~ same_file[e416]::unix::{impl#6}::from_std)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:4920 ~ std[e3cd]::os::fd::raw::FromRawFd::from_raw_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:42 ~ same_file[e416]::unix::{impl#6}::stderr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:38 ~ same_file[e416]::unix::{impl#6}::from_std)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(2:4920 ~ std[e3cd]::os::fd::raw::FromRawFd::from_raw_fd)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:43 ~ same_file[e416]::unix::{impl#6}::as_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9662 ~ core[7d5a]::option::{impl#0}::as_ref)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ same_file[e416]::unix::{impl#6}::as_file_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9670 ~ core[7d5a]::option::{impl#0}::unwrap)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9713 ~ core[7d5a]::option::{impl#0}::take)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:9663 ~ core[7d5a]::option::{impl#0}::as_mut)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ same_file[e416]::unix::{impl#6}::dev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:46 ~ same_file[e416]::unix::{impl#6}::ino)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:72 ~ same_file[e416]::{impl#1}::fmt)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11210 ~ core[7d5a]::fmt::{impl#9}::debug_tuple_field1_finish)
[DEBUG] >> NOT FOUND! Getting extern def
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:74 ~ same_file[e416]::{impl#2}::assert_receiver_is_total_eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:77 ~ same_file[e416]::{impl#4}::eq)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).6), kind: Field(Expr { hir_id: HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).7), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:108:21: 108:21 (#7), res: Local(HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).8), res: Local(HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:108:21: 108:30 (#7) }, 0#0), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:109:19: 109:30 (#7) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).9), kind: Field(Expr { hir_id: HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).10), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:108:21: 108:30 (#7), res: Local(HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).4)), segments: [PathSegment { ident: other#7, hir_id: HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).11), res: Local(HirId(DefId(0:77 ~ same_file[e416]::{impl#4}::eq).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:108:21: 108:30 (#7) }, 0#0), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:109:19: 109:30 (#7) }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:79 ~ same_file[e416]::{impl#5}::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:11357 ~ core[7d5a]::hash::Hash::hash)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ same_file[e416]::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:35 ~ same_file[e416]::unix::{impl#6}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:50 ~ same_file[e416]::{impl#0}::from_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:37 ~ same_file[e416]::unix::{impl#6}::from_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:51 ~ same_file[e416]::{impl#0}::stdin)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:40 ~ same_file[e416]::unix::{impl#6}::stdin)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:52 ~ same_file[e416]::{impl#0}::stdout)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:41 ~ same_file[e416]::unix::{impl#6}::stdout)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:53 ~ same_file[e416]::{impl#0}::stderr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(3:10395 ~ core[7d5a]::result::{impl#0}::map)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:42 ~ same_file[e416]::unix::{impl#6}::stderr)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(0:54 ~ same_file[e416]::{impl#0}::as_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:43 ~ same_file[e416]::unix::{impl#6}::as_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:55 ~ same_file[e416]::{impl#0}::as_file_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:44 ~ same_file[e416]::unix::{impl#6}::as_file_mut)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:56 ~ same_file[e416]::{impl#0}::dev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:45 ~ same_file[e416]::unix::{impl#6}::dev)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:57 ~ same_file[e416]::{impl#0}::ino)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:46 ~ same_file[e416]::unix::{impl#6}::ino)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:58 ~ same_file[e416]::is_same_file)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }, Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Checking binary expression with...
[DEBUG] > LHS: Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).9), kind: Match(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).18), kind: Call(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).17), kind: Path(LangItem(TryTraitBranch, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#14))), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#14) }, [Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).10), kind: Call(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).11), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).13), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:14 (#0), res: Def(Struct, DefId(0:68 ~ same_file[e416]::Handle)), segments: [PathSegment { ident: Handle#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).12), res: Def(Struct, DefId(0:68 ~ same_file[e416]::Handle)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:14 (#0) }, PathSegment { ident: from_path#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).14), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:25 (#0) }, [Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).15), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:26: 375:31 (#0), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).2)), segments: [PathSegment { ident: path1#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).16), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).2)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:26: 375:31 (#0) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:32 (#0) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#14) }, [Arm { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).33), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15), pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).32), kind: Struct(LangItem(ControlFlowBreak, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15)), [PatField { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).31), ident: 0#15, pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).25), kind: Binding(BindingMode(No, Not), HirId(DefId(0:58 ~ same_file[e416]::is_same_file).25), residual#0, None), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15), default_binding_modes: true }, is_shorthand: false, span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15) }], false), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).30), kind: Ret(Some(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).29), kind: Call(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).28), kind: Path(LangItem(TryTraitFromResidual, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15))), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15) }, [Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).27), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).25)), segments: [PathSegment { ident: residual#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).26), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).25)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#14) })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:32: 375:33 (#15) } }, Arm { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).24), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#0), pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).23), kind: Struct(LangItem(ControlFlowContinue, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#14)), [PatField { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).22), ident: 0#14, pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).19), kind: Binding(BindingMode(No, Not), HirId(DefId(0:58 ~ same_file[e416]::is_same_file).19), val#0, None), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#0), default_binding_modes: true }, is_shorthand: false, span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#14) }], false), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#14), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).21), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#0), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).19)), segments: [PathSegment { ident: val#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).20), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).19)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#0) } }], TryDesugar(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).18))), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:8: 375:33 (#0) }
[DEBUG] > RHS: Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).34), kind: Match(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).43), kind: Call(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).42), kind: Path(LangItem(TryTraitBranch, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#16))), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#16) }, [Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).35), kind: Call(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).36), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).38), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:43 (#0), res: Def(Struct, DefId(0:68 ~ same_file[e416]::Handle)), segments: [PathSegment { ident: Handle#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).37), res: Def(Struct, DefId(0:68 ~ same_file[e416]::Handle)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:43 (#0) }, PathSegment { ident: from_path#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).39), res: Err, args: None, infer_args: true })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:54 (#0) }, [Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).40), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:55: 375:60 (#0), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).4)), segments: [PathSegment { ident: path2#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).41), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).4)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:55: 375:60 (#0) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:61 (#0) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#16) }, [Arm { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).58), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17), pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).57), kind: Struct(LangItem(ControlFlowBreak, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17)), [PatField { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).56), ident: 0#17, pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).50), kind: Binding(BindingMode(No, Not), HirId(DefId(0:58 ~ same_file[e416]::is_same_file).50), residual#0, None), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17), default_binding_modes: true }, is_shorthand: false, span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17) }], false), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).55), kind: Ret(Some(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).54), kind: Call(Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).53), kind: Path(LangItem(TryTraitFromResidual, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17))), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17) }, [Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).52), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).50)), segments: [PathSegment { ident: residual#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).51), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).50)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17) }]), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#16) })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:61: 375:62 (#17) } }, Arm { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).49), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#0), pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).48), kind: Struct(LangItem(ControlFlowContinue, /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#16)), [PatField { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).47), ident: 0#16, pat: Pat { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).44), kind: Binding(BindingMode(No, Not), HirId(DefId(0:58 ~ same_file[e416]::is_same_file).44), val#0, None), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#0), default_binding_modes: true }, is_shorthand: false, span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#16) }], false), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#16), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).46), kind: Path(Resolved(None, Path { span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#0), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).44)), segments: [PathSegment { ident: val#0, hir_id: HirId(DefId(0:58 ~ same_file[e416]::is_same_file).45), res: Local(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).44)), args: None, infer_args: true }] })), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#0) } }], TryDesugar(HirId(DefId(0:58 ~ same_file[e416]::is_same_file).43))), span: /Users/georgeberdovskiy/Desktop/UCD/Research/PLDI25/coenobita-case-studies/same-file/src/lib.rs:375:37: 375:62 (#0) }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ same_file[e416]::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3892 ~ core[7d5a]::ops::try_trait::Try::branch)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Trying to get func ty of defid DefId(0:48 ~ same_file[e416]::{impl#0}::from_path)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG] Trying to get func ty of defid DefId(3:3895 ~ core[7d5a]::ops::try_trait::FromResidual::from_residual)
[DEBUG] >> FOUND IT! It's Ty { property: FlowPair(Universal, Universal), kind: Fn([Ty { property: FlowPair(Universal, Universal), kind: Infer }], Ty { property: FlowPair(Universal, Universal), kind: Infer }) }
[DEBUG] Done checking call expression with ret ty: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > LHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
[DEBUG]   > RHS Type is: Ty { property: FlowPair(Universal, Universal), kind: Infer }
